version: '3'

services:
  zookeeper:
    image: zookeeper:3.5
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    expose:
      - 22181

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    expose:
      - 29092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:9092,EXTERNAL://localhost:29092,DOCKER://broker:39092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  redis-kafka:
    image: redis:latest
    restart: always
    expose:
      - 6379
    depends_on:
      - broker

  clickhouse-node1:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node1
    hostname: clickhouse-node1
    expose:
      - 8123
      - 9000
    volumes:
      - ./data/node1:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node2:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node2
    hostname: clickhouse-node2
    volumes:
      - ./data/node2:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node3:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node3
    hostname: clickhouse-node3
    volumes:
      - ./data/node3:/etc/clickhouse-server
    depends_on:
      - zookeeper

  clickhouse-node4:
    image: yandex/clickhouse-server:latest
    container_name: clickhouse-node4
    hostname: clickhouse-node4
    volumes:
      - ./data/node4:/etc/clickhouse-server
    depends_on:
      - zookeeper

  redis:
    image: redis:latest
    command: --port 6378
    expose:
      - 6378


  # Кластер MongoDB

  mongors1n1:
    container_name: mongors1n1
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27017:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors1n1_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongors1n2:
    container_name: mongors1n2
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27027:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors1n2_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongors1n3:
    container_name: mongors1n3
    image: mongo
    command: mongod --shardsvr --replSet mongors1 --dbpath /data/db --port 27017
    ports:
      - 27037:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors1n3_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongors2n1:
    container_name: mongors2n1
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27047:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors2n1_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongors2n2:
    container_name: mongors2n2
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27057:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors2n2_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongors2n3:
    container_name: mongors2n3
    image: mongo
    command: mongod --shardsvr --replSet mongors2 --dbpath /data/db --port 27017
    ports:
      - 27067:27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongors2n3_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongocfg1:
    container_name: mongocfg1
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongocfg1_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongocfg2:
    container_name: mongocfg2
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongocfg2_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongocfg3:
    container_name: mongocfg3
    image: mongo
    command: mongod --configsvr --replSet mongors1conf --dbpath /data/db --port 27017
    expose:
      - "27017"
    volumes:
      - mongo_cluster_mongocfg3_db:/data/db
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongos1:
    container_name: mongos1
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27019:27017
    expose:
      - "27017"
    volumes:
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  mongos2:
    container_name: mongos2
    image: mongo
    depends_on:
      - mongocfg1
      - mongocfg2
    command: mongos --configdb mongors1conf/mongocfg1:27017,mongocfg2:27017,mongocfg3:27017 --port 27017 --bind_ip_all
    ports:
      - 27020:27017
    expose:
      - "27017"
    volumes:
      - ./config/ugc_fastapi_project/mongodb_config:/scripts

  etl:
    image: mikhailkushnerev/etl:v2.0.0
    restart: always
    env_file:
      - ../docker_app/config/ugc_etl_process/.env.prod

  ugc:
    image: mikhailkushnerev/ugc-service:v2.0.0
    restart: always
    env_file:
      - ../docker_app/config/ugc_fastapi_project/.env.prod
    depends_on:
      - etl
      - mongos1
      - mongos2
      - redis

  nginx:
    image: nginx:latest
    volumes:
      - ./etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./etc/nginx/configs:/etc/nginx/conf.d:ro
      - static_volume:/opt/app/staticfiles
      - media_volume:/opt/app/mediafiles
      - ../application_logs/nginx/:/var/log/nginx/
    environment:
      NGINX_SET_REAL_IPS_FROM: "[\"192.168.1.0/24\"]"
    depends_on:
      - ugc
    ports:
      - 80:80

  filebeat:
    image: elastic/filebeat:8.6.2
    volumes:
      - ../application_logs/nginx/:/var/log/nginx:ro
      - ./etc/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
    depends_on:
      - ugc
      - nginx
    networks:
      - elk_network
      - default

volumes:
  static_volume:
  media_volume:

  mongo_cluster_mongors1n1_db:
  mongo_cluster_mongors1n2_db:
  mongo_cluster_mongors1n3_db:

  mongo_cluster_mongors2n1_db:
  mongo_cluster_mongors2n2_db:
  mongo_cluster_mongors2n3_db:

  mongo_cluster_mongocfg1_db:
  mongo_cluster_mongocfg2_db:
  mongo_cluster_mongocfg3_db:

networks:
  elk_network:
    external: true